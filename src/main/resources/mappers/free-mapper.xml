<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="freeMapper">
	<insert id="insertBoard">
		<if test="fileName != null">
			insert all
			
			into tb_board
			values(seq_board.nextval, #{boardTitle}, #{boardContent}, sysdate, #{userId}, default, default)	
			into tb_free
			values(seq_board.currval)
			into tb_File
			values(seq_file.nextval, seq_board.currval, #{fileName}, null, null)

			select * from dual	
		</if>
		<if test="fileName == null">
			insert all
			
			into tb_board
			values(seq_board.nextval, #{boardTitle}, #{boardContent}, sysdate, #{userId}, default, default)
			into tb_free
			values(seq_board.currval)
			into tb_File
			values(seq_file.nextval, seq_board.currval, null, null, null)
			
			select * from dual	
		</if>
	</insert>
 	
	<select id="getListCount" resultType="_int">
		select count(*)
		from tb_board
                join tb_user using(user_id)
		where board_delete = 'N' and apt_name=#{aptName}
	</select>
	
	<select id="selectList" resultMap="boardResultSet">
		select board_no, 
		        b1.board_title, b1.board_content, b1.create_date, b1.board_count, b1.board_delete,
		        u1.nickname
		from tb_free f1
		    join tb_board b1 using(board_no)
		    join tb_user u1 using(user_id)
		where board_delete = 'N' and apt_name=#{aptName}
		order by board_no desc
	</select>
	<resultMap type="FreeBoard" id="boardResultSet">
		<id property="boardNo" column="board_No"/>
		<result property="boardTitle" column="board_Title"/>
		<result property="boardContent" column="board_Content"/>
		<result property="createDate" column="create_Date"/>
		<result property="boardCount" column="board_Count"/>
		<result property="boardDelete" column="board_Delete"/>
		<result property="nickname" column="nickname"/>
	</resultMap>

	<select id="selectFreeBoard" resultMap="fdetailResultSet">
		select board_no,
		        b.board_title, b.board_content, b.create_date, b.board_count,
		        f1.file_name,
		        u.nickname, u.user_file, user_id
		from tb_free f
		     join tb_board b using(board_no)
		     join tb_file f1 using(board_no)
		     join tb_user u using(user_id)
		where b.board_delete = 'N' and board_no = #{boardNo}
	</select>
	<resultMap type="FreeBoard" id="fdetailResultSet">
		<id property="boardNo" column="board_No"/>
		<result property="boardTitle" column="board_Title"/>	
		<result property="boardContent" column="board_Content"/>	
		<result property="createDate" column="create_Date"/>	
		<result property="boardCount" column="board_Count"/>	
		<result property="nickname" column="nickname"/>	
		<result property="userFile" column="user_File"/>	
		<result property="fileName" column="file_name"/>	
		<result property="userId" column="user_id"/>	
	</resultMap>
	<update id="addReadCount">
		update tb_board
		set board_count = board_count +1
		where board_No=#{boardNo}
	</update>

	<update id="deleteFree">
		update tb_board
		set board_delete='Y'
		where board_no=#{boardNo}
	</update>
	
	<update id="deleteReply">
		update tb_comment
		set comments_delete='Y'
		where reply_no = #{rNo}
	</update>
	
	<select id="getReplyList" resultMap="replyResultSet">
		select reply_no, board_no, reply_content, comment_date,
		        nickname, user_file
		from tb_comment
		     join tb_user using(user_id)
		where comments_delete = 'N' and board_no=#{boardNo}
		order by reply_no desc
	</select>
	<resultMap type="Comment" id="replyResultSet">
		<id property="rNo" column="REPLY_NO"/>
		<result property="boardNo" column="board_no" />
		<result property="rContent" column="reply_content" />
		<result property="rCreateDate" column="comment_date" />
		<result property="nickname" column="nickname" />
		<result property="userFile" column="user_file" />
	</resultMap>
	
	<insert id="insertReply">
		insert into tb_comment
		values(seq_reply.nextval, #{boardNo}, null, #{rUserId}, #{rContent}, sysdate, default, default)
	</insert>
	
	<update id="updateFreeBoard">
		update tb_board
		set board_title=#{boardTitle}, board_content=#{boardContent}
		where board_no = #{boardNo}
	</update>
	
	<update id="updateFreeFile">
		update tb_file
		set file_name = #{fileName}
		where board_no = #{boardNo}
	</update>
	
	<update id="updateComment">
		update tb_comment
		set reply_content=#{rContent}, comment_date = sysdate
		where reply_no=#{rNo}
	</update>
	
	<select id="selectSearchResultCount" resultType="_int">
		select count(*)
		from tb_free
			join tb_board using(board_no)
            join tb_user using(user_id)
		where board_delete = 'N' and apt_name = #{aptName} 
		<if test="writer != null">
			and nickname = #{writer}
		</if>
		<if test="content != null">
			and board_content like '%'|| #{content} || '%'
		</if>
		<if test="title != null">
			and board_title like '%'|| #{title} || '%'
		</if>
	</select>
	
	<select id="selectSearchResultList" resultMap="boardResultSet">
		select *
		from tb_free
			join tb_board using(board_no)
			join tb_user using(user_id)
		where board_delete='N' and apt_name = #{aptName}
			<if test="sc.writer != null">
				and nickname = #{sc.writer}
			</if>
			<if test="sc.content != null">
				and board_content like '%' || #{sc.content} || '%'
			</if>
			<if test="sc.title != null">
				and board_title like '%'|| #{sc.title} || '%'
			</if>
			order by board_no desc
	</select>
	
	<select id="selectSortResultList" resultMap="boardResultSet">
		select *
		from tb_free
			join tb_board using(board_no)
			join tb_user using(user_id)
		where board_delete = 'N' and apt_name = #{aptName}
		<if test="sc == 'hits'">
			order by board_count desc		
		</if>
		<if test="sc == 'latest'">
			order by board_no desc
		</if>
	</select>
	
	

</mapper>
